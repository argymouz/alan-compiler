State 0:
program' -> . program [ # ]
-- On T_id shift to state 1
-- On program shift to state 125
-- On func_def shift to state 126

State 1:
func_def -> T_id . T_lparen option(fpar_list) T_rparen T_col r_type_ list(local_def) compound_stmt [ T_eof ]
-- On T_lparen shift to state 2

State 2:
func_def -> T_id T_lparen . option(fpar_list) T_rparen T_col r_type_ list(local_def) compound_stmt [ T_lbrace T_id T_eof ]
-- On T_id shift to state 3
-- On option(fpar_list) shift to state 17
-- On fpar_list shift to state 121
-- On fpar_def shift to state 124
-- On T_rparen reduce production option(fpar_list) -> 

State 3:
fpar_def -> T_id . T_col data_type_ [ T_rparen T_com ]
fpar_def -> T_id . T_col T_reference data_type_arr_ [ T_rparen T_com ]
-- On T_col shift to state 4

State 4:
fpar_def -> T_id T_col . data_type_ [ T_rparen T_com ]
fpar_def -> T_id T_col . T_reference data_type_arr_ [ T_rparen T_com ]
-- On T_reference shift to state 5
-- On T_int shift to state 14
-- On T_byte shift to state 15
-- On data_type_ shift to state 16

State 5:
fpar_def -> T_id T_col T_reference . data_type_arr_ [ T_rparen T_com ]
-- On T_int shift to state 6
-- On T_byte shift to state 9
-- On data_type_arr_ shift to state 12
-- On data_type_ shift to state 13

State 6:
data_type_ -> T_int . [ T_rparen T_com ]
data_type_arr_ -> T_int . T_lbrack T_rbrack [ T_rparen T_com ]
-- On T_lbrack shift to state 7
-- On T_rparen reduce production data_type_ -> T_int 
-- On T_com reduce production data_type_ -> T_int 

State 7:
data_type_arr_ -> T_int T_lbrack . T_rbrack [ T_rparen T_com ]
-- On T_rbrack shift to state 8

State 8:
data_type_arr_ -> T_int T_lbrack T_rbrack . [ T_rparen T_com ]
-- On T_rparen reduce production data_type_arr_ -> T_int T_lbrack T_rbrack 
-- On T_com reduce production data_type_arr_ -> T_int T_lbrack T_rbrack 

State 9:
data_type_ -> T_byte . [ T_rparen T_com ]
data_type_arr_ -> T_byte . T_lbrack T_rbrack [ T_rparen T_com ]
-- On T_lbrack shift to state 10
-- On T_rparen reduce production data_type_ -> T_byte 
-- On T_com reduce production data_type_ -> T_byte 

State 10:
data_type_arr_ -> T_byte T_lbrack . T_rbrack [ T_rparen T_com ]
-- On T_rbrack shift to state 11

State 11:
data_type_arr_ -> T_byte T_lbrack T_rbrack . [ T_rparen T_com ]
-- On T_rparen reduce production data_type_arr_ -> T_byte T_lbrack T_rbrack 
-- On T_com reduce production data_type_arr_ -> T_byte T_lbrack T_rbrack 

State 12:
fpar_def -> T_id T_col T_reference data_type_arr_ . [ T_rparen T_com ]
-- On T_rparen reduce production fpar_def -> T_id T_col T_reference data_type_arr_ 
-- On T_com reduce production fpar_def -> T_id T_col T_reference data_type_arr_ 

State 13:
data_type_arr_ -> data_type_ . [ T_rparen T_com ]
-- On T_rparen reduce production data_type_arr_ -> data_type_ 
-- On T_com reduce production data_type_arr_ -> data_type_ 

State 14:
data_type_ -> T_int . [ T_semicol T_rparen T_lbrack T_lbrace T_id T_com ]
-- On T_semicol reduce production data_type_ -> T_int 
-- On T_rparen reduce production data_type_ -> T_int 
-- On T_lbrack reduce production data_type_ -> T_int 
-- On T_lbrace reduce production data_type_ -> T_int 
-- On T_id reduce production data_type_ -> T_int 
-- On T_com reduce production data_type_ -> T_int 

State 15:
data_type_ -> T_byte . [ T_semicol T_rparen T_lbrack T_lbrace T_id T_com ]
-- On T_semicol reduce production data_type_ -> T_byte 
-- On T_rparen reduce production data_type_ -> T_byte 
-- On T_lbrack reduce production data_type_ -> T_byte 
-- On T_lbrace reduce production data_type_ -> T_byte 
-- On T_id reduce production data_type_ -> T_byte 
-- On T_com reduce production data_type_ -> T_byte 

State 16:
fpar_def -> T_id T_col data_type_ . [ T_rparen T_com ]
-- On T_rparen reduce production fpar_def -> T_id T_col data_type_ 
-- On T_com reduce production fpar_def -> T_id T_col data_type_ 

State 17:
func_def -> T_id T_lparen option(fpar_list) . T_rparen T_col r_type_ list(local_def) compound_stmt [ T_lbrace T_id T_eof ]
-- On T_rparen shift to state 18

State 18:
func_def -> T_id T_lparen option(fpar_list) T_rparen . T_col r_type_ list(local_def) compound_stmt [ T_lbrace T_id T_eof ]
-- On T_col shift to state 19

State 19:
func_def -> T_id T_lparen option(fpar_list) T_rparen T_col . r_type_ list(local_def) compound_stmt [ T_lbrace T_id T_eof ]
-- On T_proc shift to state 20
-- On T_int shift to state 14
-- On T_byte shift to state 15
-- On r_type_ shift to state 21
-- On data_type_ shift to state 120

State 20:
r_type_ -> T_proc . [ T_lbrace T_id ]
-- On T_lbrace reduce production r_type_ -> T_proc 
-- On T_id reduce production r_type_ -> T_proc 

State 21:
func_def -> T_id T_lparen option(fpar_list) T_rparen T_col r_type_ . list(local_def) compound_stmt [ T_lbrace T_id T_eof ]
-- On T_id shift to state 22
-- On var_def shift to state 30
-- On local_def shift to state 31
-- On list(local_def) shift to state 34
-- On func_def shift to state 33
-- On T_lbrace reduce production list(local_def) -> 

State 22:
func_def -> T_id . T_lparen option(fpar_list) T_rparen T_col r_type_ list(local_def) compound_stmt [ T_lbrace T_id ]
var_def -> T_id . T_col data_type_ T_semicol [ T_lbrace T_id ]
var_def -> T_id . T_col data_type_ T_lbrack T_const T_rbrack T_semicol [ T_lbrace T_id ]
-- On T_lparen shift to state 2
-- On T_col shift to state 23

State 23:
var_def -> T_id T_col . data_type_ T_semicol [ T_lbrace T_id ]
var_def -> T_id T_col . data_type_ T_lbrack T_const T_rbrack T_semicol [ T_lbrace T_id ]
-- On T_int shift to state 14
-- On T_byte shift to state 15
-- On data_type_ shift to state 24

State 24:
var_def -> T_id T_col data_type_ . T_semicol [ T_lbrace T_id ]
var_def -> T_id T_col data_type_ . T_lbrack T_const T_rbrack T_semicol [ T_lbrace T_id ]
-- On T_semicol shift to state 25
-- On T_lbrack shift to state 26

State 25:
var_def -> T_id T_col data_type_ T_semicol . [ T_lbrace T_id ]
-- On T_lbrace reduce production var_def -> T_id T_col data_type_ T_semicol 
-- On T_id reduce production var_def -> T_id T_col data_type_ T_semicol 

State 26:
var_def -> T_id T_col data_type_ T_lbrack . T_const T_rbrack T_semicol [ T_lbrace T_id ]
-- On T_const shift to state 27

State 27:
var_def -> T_id T_col data_type_ T_lbrack T_const . T_rbrack T_semicol [ T_lbrace T_id ]
-- On T_rbrack shift to state 28

State 28:
var_def -> T_id T_col data_type_ T_lbrack T_const T_rbrack . T_semicol [ T_lbrace T_id ]
-- On T_semicol shift to state 29

State 29:
var_def -> T_id T_col data_type_ T_lbrack T_const T_rbrack T_semicol . [ T_lbrace T_id ]
-- On T_lbrace reduce production var_def -> T_id T_col data_type_ T_lbrack T_const T_rbrack T_semicol 
-- On T_id reduce production var_def -> T_id T_col data_type_ T_lbrack T_const T_rbrack T_semicol 

State 30:
local_def -> var_def . [ T_lbrace T_id ]
-- On T_lbrace reduce production local_def -> var_def 
-- On T_id reduce production local_def -> var_def 

State 31:
list(local_def) -> local_def . list(local_def) [ T_lbrace ]
-- On T_id shift to state 22
-- On var_def shift to state 30
-- On local_def shift to state 31
-- On list(local_def) shift to state 32
-- On func_def shift to state 33
-- On T_lbrace reduce production list(local_def) -> 

State 32:
list(local_def) -> local_def list(local_def) . [ T_lbrace ]
-- On T_lbrace reduce production list(local_def) -> local_def list(local_def) 

State 33:
local_def -> func_def . [ T_lbrace T_id ]
-- On T_lbrace reduce production local_def -> func_def 
-- On T_id reduce production local_def -> func_def 

State 34:
func_def -> T_id T_lparen option(fpar_list) T_rparen T_col r_type_ list(local_def) . compound_stmt [ T_lbrace T_id T_eof ]
-- On T_lbrace shift to state 35
-- On compound_stmt shift to state 119

State 35:
compound_stmt -> T_lbrace . list(stmt) T_rbrace [ T_while T_string T_semicol T_return T_rbrace T_lbrace T_if T_id T_eof T_else ]
-- On T_while shift to state 36
-- On T_string shift to state 39
-- On T_semicol shift to state 95
-- On T_return shift to state 96
-- On T_lbrace shift to state 35
-- On T_if shift to state 100
-- On T_id shift to state 44
-- On stmt shift to state 115
-- On list(stmt) shift to state 117
-- On l_value shift to state 107
-- On func_call shift to state 111
-- On compound_stmt shift to state 113
-- On T_rbrace reduce production list(stmt) -> 

State 36:
stmt -> T_while . T_lparen cond T_rparen stmt [ T_while T_string T_semicol T_return T_rbrace T_lbrace T_if T_id T_else ]
-- On T_lparen shift to state 37

State 37:
stmt -> T_while T_lparen . cond T_rparen stmt [ T_while T_string T_semicol T_return T_rbrace T_lbrace T_if T_id T_else ]
-- On T_true shift to state 38
-- On T_string shift to state 39
-- On T_plus shift to state 40
-- On T_neg shift to state 41
-- On T_minus shift to state 42
-- On T_lparen shift to state 43
-- On T_id shift to state 44
-- On T_false shift to state 74
-- On T_const_char_ shift to state 47
-- On T_const shift to state 48
-- On unary_op shift to state 49
-- On unary_logic_op shift to state 75
-- On l_value shift to state 50
-- On func_call shift to state 51
-- On expr shift to state 76
-- On cond shift to state 93

State 38:
cond -> T_true . [ T_rparen T_or T_and ]
-- On T_rparen reduce production cond -> T_true 
-- On T_or reduce production cond -> T_true 
-- On T_and reduce production cond -> T_true 

State 39:
l_value -> T_string . [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_assign T_and ]
-- On T_semicol reduce production l_value -> T_string 
-- On T_rparen reduce production l_value -> T_string 
-- On T_rbrack reduce production l_value -> T_string 
-- On T_plus reduce production l_value -> T_string 
-- On T_or reduce production l_value -> T_string 
-- On T_neq reduce production l_value -> T_string 
-- On T_mul reduce production l_value -> T_string 
-- On T_morequ reduce production l_value -> T_string 
-- On T_more reduce production l_value -> T_string 
-- On T_mod reduce production l_value -> T_string 
-- On T_minus reduce production l_value -> T_string 
-- On T_lessequ reduce production l_value -> T_string 
-- On T_less reduce production l_value -> T_string 
-- On T_eq reduce production l_value -> T_string 
-- On T_div reduce production l_value -> T_string 
-- On T_com reduce production l_value -> T_string 
-- On T_assign reduce production l_value -> T_string 
-- On T_and reduce production l_value -> T_string 

State 40:
unary_op -> T_plus . [ T_string T_plus T_minus T_lparen T_id T_const_char_ T_const ]
-- On T_string reduce production unary_op -> T_plus 
-- On T_plus reduce production unary_op -> T_plus 
-- On T_minus reduce production unary_op -> T_plus 
-- On T_lparen reduce production unary_op -> T_plus 
-- On T_id reduce production unary_op -> T_plus 
-- On T_const_char_ reduce production unary_op -> T_plus 
-- On T_const reduce production unary_op -> T_plus 

State 41:
unary_logic_op -> T_neg . [ T_true T_string T_plus T_neg T_minus T_lparen T_id T_false T_const_char_ T_const ]
-- On T_true reduce production unary_logic_op -> T_neg 
-- On T_string reduce production unary_logic_op -> T_neg 
-- On T_plus reduce production unary_logic_op -> T_neg 
-- On T_neg reduce production unary_logic_op -> T_neg 
-- On T_minus reduce production unary_logic_op -> T_neg 
-- On T_lparen reduce production unary_logic_op -> T_neg 
-- On T_id reduce production unary_logic_op -> T_neg 
-- On T_false reduce production unary_logic_op -> T_neg 
-- On T_const_char_ reduce production unary_logic_op -> T_neg 
-- On T_const reduce production unary_logic_op -> T_neg 

State 42:
unary_op -> T_minus . [ T_string T_plus T_minus T_lparen T_id T_const_char_ T_const ]
-- On T_string reduce production unary_op -> T_minus 
-- On T_plus reduce production unary_op -> T_minus 
-- On T_minus reduce production unary_op -> T_minus 
-- On T_lparen reduce production unary_op -> T_minus 
-- On T_id reduce production unary_op -> T_minus 
-- On T_const_char_ reduce production unary_op -> T_minus 
-- On T_const reduce production unary_op -> T_minus 

State 43:
cond -> T_lparen . cond T_rparen [ T_rparen T_or T_and ]
expr -> T_lparen . expr T_rparen [ T_rparen T_plus T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div ]
-- On T_true shift to state 38
-- On T_string shift to state 39
-- On T_plus shift to state 40
-- On T_neg shift to state 41
-- On T_minus shift to state 42
-- On T_lparen shift to state 43
-- On T_id shift to state 44
-- On T_false shift to state 74
-- On T_const_char_ shift to state 47
-- On T_const shift to state 48
-- On unary_op shift to state 49
-- On unary_logic_op shift to state 75
-- On l_value shift to state 50
-- On func_call shift to state 51
-- On expr shift to state 86
-- On cond shift to state 87

State 44:
func_call -> T_id . T_lparen option(expr_list) T_rparen [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
l_value -> T_id . [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_assign T_and ]
l_value -> T_id . T_lbrack expr T_rbrack [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_assign T_and ]
-- On T_lparen shift to state 45
-- On T_lbrack shift to state 71
-- On T_semicol reduce production l_value -> T_id 
-- On T_rparen reduce production l_value -> T_id 
-- On T_rbrack reduce production l_value -> T_id 
-- On T_plus reduce production l_value -> T_id 
-- On T_or reduce production l_value -> T_id 
-- On T_neq reduce production l_value -> T_id 
-- On T_mul reduce production l_value -> T_id 
-- On T_morequ reduce production l_value -> T_id 
-- On T_more reduce production l_value -> T_id 
-- On T_mod reduce production l_value -> T_id 
-- On T_minus reduce production l_value -> T_id 
-- On T_lessequ reduce production l_value -> T_id 
-- On T_less reduce production l_value -> T_id 
-- On T_eq reduce production l_value -> T_id 
-- On T_div reduce production l_value -> T_id 
-- On T_com reduce production l_value -> T_id 
-- On T_assign reduce production l_value -> T_id 
-- On T_and reduce production l_value -> T_id 

State 45:
func_call -> T_id T_lparen . option(expr_list) T_rparen [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
-- On T_string shift to state 39
-- On T_plus shift to state 40
-- On T_minus shift to state 42
-- On T_lparen shift to state 46
-- On T_id shift to state 44
-- On T_const_char_ shift to state 47
-- On T_const shift to state 48
-- On unary_op shift to state 49
-- On option(expr_list) shift to state 65
-- On l_value shift to state 50
-- On func_call shift to state 51
-- On expr_list shift to state 67
-- On expr shift to state 70
-- On T_rparen reduce production option(expr_list) -> 

State 46:
expr -> T_lparen . expr T_rparen [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
-- On T_string shift to state 39
-- On T_plus shift to state 40
-- On T_minus shift to state 42
-- On T_lparen shift to state 46
-- On T_id shift to state 44
-- On T_const_char_ shift to state 47
-- On T_const shift to state 48
-- On unary_op shift to state 49
-- On l_value shift to state 50
-- On func_call shift to state 51
-- On expr shift to state 53

State 47:
expr -> T_const_char_ . [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
-- On T_semicol reduce production expr -> T_const_char_ 
-- On T_rparen reduce production expr -> T_const_char_ 
-- On T_rbrack reduce production expr -> T_const_char_ 
-- On T_plus reduce production expr -> T_const_char_ 
-- On T_or reduce production expr -> T_const_char_ 
-- On T_neq reduce production expr -> T_const_char_ 
-- On T_mul reduce production expr -> T_const_char_ 
-- On T_morequ reduce production expr -> T_const_char_ 
-- On T_more reduce production expr -> T_const_char_ 
-- On T_mod reduce production expr -> T_const_char_ 
-- On T_minus reduce production expr -> T_const_char_ 
-- On T_lessequ reduce production expr -> T_const_char_ 
-- On T_less reduce production expr -> T_const_char_ 
-- On T_eq reduce production expr -> T_const_char_ 
-- On T_div reduce production expr -> T_const_char_ 
-- On T_com reduce production expr -> T_const_char_ 
-- On T_and reduce production expr -> T_const_char_ 

State 48:
expr -> T_const . [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
-- On T_semicol reduce production expr -> T_const 
-- On T_rparen reduce production expr -> T_const 
-- On T_rbrack reduce production expr -> T_const 
-- On T_plus reduce production expr -> T_const 
-- On T_or reduce production expr -> T_const 
-- On T_neq reduce production expr -> T_const 
-- On T_mul reduce production expr -> T_const 
-- On T_morequ reduce production expr -> T_const 
-- On T_more reduce production expr -> T_const 
-- On T_mod reduce production expr -> T_const 
-- On T_minus reduce production expr -> T_const 
-- On T_lessequ reduce production expr -> T_const 
-- On T_less reduce production expr -> T_const 
-- On T_eq reduce production expr -> T_const 
-- On T_div reduce production expr -> T_const 
-- On T_com reduce production expr -> T_const 
-- On T_and reduce production expr -> T_const 

State 49:
expr -> unary_op . expr [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
-- On T_string shift to state 39
-- On T_plus shift to state 40
-- On T_minus shift to state 42
-- On T_lparen shift to state 46
-- On T_id shift to state 44
-- On T_const_char_ shift to state 47
-- On T_const shift to state 48
-- On unary_op shift to state 49
-- On l_value shift to state 50
-- On func_call shift to state 51
-- On expr shift to state 52

State 50:
expr -> l_value . [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
-- On T_semicol reduce production expr -> l_value 
-- On T_rparen reduce production expr -> l_value 
-- On T_rbrack reduce production expr -> l_value 
-- On T_plus reduce production expr -> l_value 
-- On T_or reduce production expr -> l_value 
-- On T_neq reduce production expr -> l_value 
-- On T_mul reduce production expr -> l_value 
-- On T_morequ reduce production expr -> l_value 
-- On T_more reduce production expr -> l_value 
-- On T_mod reduce production expr -> l_value 
-- On T_minus reduce production expr -> l_value 
-- On T_lessequ reduce production expr -> l_value 
-- On T_less reduce production expr -> l_value 
-- On T_eq reduce production expr -> l_value 
-- On T_div reduce production expr -> l_value 
-- On T_com reduce production expr -> l_value 
-- On T_and reduce production expr -> l_value 

State 51:
expr -> func_call . [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
-- On T_semicol reduce production expr -> func_call 
-- On T_rparen reduce production expr -> func_call 
-- On T_rbrack reduce production expr -> func_call 
-- On T_plus reduce production expr -> func_call 
-- On T_or reduce production expr -> func_call 
-- On T_neq reduce production expr -> func_call 
-- On T_mul reduce production expr -> func_call 
-- On T_morequ reduce production expr -> func_call 
-- On T_more reduce production expr -> func_call 
-- On T_mod reduce production expr -> func_call 
-- On T_minus reduce production expr -> func_call 
-- On T_lessequ reduce production expr -> func_call 
-- On T_less reduce production expr -> func_call 
-- On T_eq reduce production expr -> func_call 
-- On T_div reduce production expr -> func_call 
-- On T_com reduce production expr -> func_call 
-- On T_and reduce production expr -> func_call 

State 52:
expr -> unary_op expr . [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
expr -> expr . T_plus expr [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
expr -> expr . T_minus expr [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
expr -> expr . T_mul expr [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
expr -> expr . T_div expr [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
expr -> expr . T_mod expr [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
-- On T_semicol reduce production expr -> unary_op expr 
-- On T_rparen reduce production expr -> unary_op expr 
-- On T_rbrack reduce production expr -> unary_op expr 
-- On T_plus reduce production expr -> unary_op expr 
-- On T_or reduce production expr -> unary_op expr 
-- On T_neq reduce production expr -> unary_op expr 
-- On T_mul reduce production expr -> unary_op expr 
-- On T_morequ reduce production expr -> unary_op expr 
-- On T_more reduce production expr -> unary_op expr 
-- On T_mod reduce production expr -> unary_op expr 
-- On T_minus reduce production expr -> unary_op expr 
-- On T_lessequ reduce production expr -> unary_op expr 
-- On T_less reduce production expr -> unary_op expr 
-- On T_eq reduce production expr -> unary_op expr 
-- On T_div reduce production expr -> unary_op expr 
-- On T_com reduce production expr -> unary_op expr 
-- On T_and reduce production expr -> unary_op expr 

State 53:
expr -> T_lparen expr . T_rparen [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
expr -> expr . T_plus expr [ T_rparen T_plus T_mul T_mod T_minus T_div ]
expr -> expr . T_minus expr [ T_rparen T_plus T_mul T_mod T_minus T_div ]
expr -> expr . T_mul expr [ T_rparen T_plus T_mul T_mod T_minus T_div ]
expr -> expr . T_div expr [ T_rparen T_plus T_mul T_mod T_minus T_div ]
expr -> expr . T_mod expr [ T_rparen T_plus T_mul T_mod T_minus T_div ]
-- On T_rparen shift to state 54
-- On T_plus shift to state 55
-- On T_mul shift to state 57
-- On T_mod shift to state 59
-- On T_minus shift to state 63
-- On T_div shift to state 61

State 54:
expr -> T_lparen expr T_rparen . [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
-- On T_semicol reduce production expr -> T_lparen expr T_rparen 
-- On T_rparen reduce production expr -> T_lparen expr T_rparen 
-- On T_rbrack reduce production expr -> T_lparen expr T_rparen 
-- On T_plus reduce production expr -> T_lparen expr T_rparen 
-- On T_or reduce production expr -> T_lparen expr T_rparen 
-- On T_neq reduce production expr -> T_lparen expr T_rparen 
-- On T_mul reduce production expr -> T_lparen expr T_rparen 
-- On T_morequ reduce production expr -> T_lparen expr T_rparen 
-- On T_more reduce production expr -> T_lparen expr T_rparen 
-- On T_mod reduce production expr -> T_lparen expr T_rparen 
-- On T_minus reduce production expr -> T_lparen expr T_rparen 
-- On T_lessequ reduce production expr -> T_lparen expr T_rparen 
-- On T_less reduce production expr -> T_lparen expr T_rparen 
-- On T_eq reduce production expr -> T_lparen expr T_rparen 
-- On T_div reduce production expr -> T_lparen expr T_rparen 
-- On T_com reduce production expr -> T_lparen expr T_rparen 
-- On T_and reduce production expr -> T_lparen expr T_rparen 

State 55:
expr -> expr T_plus . expr [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
-- On T_string shift to state 39
-- On T_plus shift to state 40
-- On T_minus shift to state 42
-- On T_lparen shift to state 46
-- On T_id shift to state 44
-- On T_const_char_ shift to state 47
-- On T_const shift to state 48
-- On unary_op shift to state 49
-- On l_value shift to state 50
-- On func_call shift to state 51
-- On expr shift to state 56

State 56:
expr -> expr . T_plus expr [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
expr -> expr T_plus expr . [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
expr -> expr . T_minus expr [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
expr -> expr . T_mul expr [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
expr -> expr . T_div expr [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
expr -> expr . T_mod expr [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
-- On T_mul shift to state 57
-- On T_mod shift to state 59
-- On T_minus shift to state 63
-- On T_div shift to state 61
-- On T_semicol reduce production expr -> expr T_plus expr 
-- On T_rparen reduce production expr -> expr T_plus expr 
-- On T_rbrack reduce production expr -> expr T_plus expr 
-- On T_plus reduce production expr -> expr T_plus expr 
-- On T_or reduce production expr -> expr T_plus expr 
-- On T_neq reduce production expr -> expr T_plus expr 
-- On T_morequ reduce production expr -> expr T_plus expr 
-- On T_more reduce production expr -> expr T_plus expr 
-- On T_lessequ reduce production expr -> expr T_plus expr 
-- On T_less reduce production expr -> expr T_plus expr 
-- On T_eq reduce production expr -> expr T_plus expr 
-- On T_com reduce production expr -> expr T_plus expr 
-- On T_and reduce production expr -> expr T_plus expr 

State 57:
expr -> expr T_mul . expr [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
-- On T_string shift to state 39
-- On T_plus shift to state 40
-- On T_minus shift to state 42
-- On T_lparen shift to state 46
-- On T_id shift to state 44
-- On T_const_char_ shift to state 47
-- On T_const shift to state 48
-- On unary_op shift to state 49
-- On l_value shift to state 50
-- On func_call shift to state 51
-- On expr shift to state 58

State 58:
expr -> expr . T_plus expr [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
expr -> expr . T_minus expr [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
expr -> expr . T_mul expr [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
expr -> expr T_mul expr . [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
expr -> expr . T_div expr [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
expr -> expr . T_mod expr [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
-- On T_mod shift to state 59
-- On T_div shift to state 61
-- On T_semicol reduce production expr -> expr T_mul expr 
-- On T_rparen reduce production expr -> expr T_mul expr 
-- On T_rbrack reduce production expr -> expr T_mul expr 
-- On T_plus reduce production expr -> expr T_mul expr 
-- On T_or reduce production expr -> expr T_mul expr 
-- On T_neq reduce production expr -> expr T_mul expr 
-- On T_mul reduce production expr -> expr T_mul expr 
-- On T_morequ reduce production expr -> expr T_mul expr 
-- On T_more reduce production expr -> expr T_mul expr 
-- On T_minus reduce production expr -> expr T_mul expr 
-- On T_lessequ reduce production expr -> expr T_mul expr 
-- On T_less reduce production expr -> expr T_mul expr 
-- On T_eq reduce production expr -> expr T_mul expr 
-- On T_com reduce production expr -> expr T_mul expr 
-- On T_and reduce production expr -> expr T_mul expr 

State 59:
expr -> expr T_mod . expr [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
-- On T_string shift to state 39
-- On T_plus shift to state 40
-- On T_minus shift to state 42
-- On T_lparen shift to state 46
-- On T_id shift to state 44
-- On T_const_char_ shift to state 47
-- On T_const shift to state 48
-- On unary_op shift to state 49
-- On l_value shift to state 50
-- On func_call shift to state 51
-- On expr shift to state 60

State 60:
expr -> expr . T_plus expr [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
expr -> expr . T_minus expr [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
expr -> expr . T_mul expr [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
expr -> expr . T_div expr [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
expr -> expr . T_mod expr [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
expr -> expr T_mod expr . [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
-- On T_semicol reduce production expr -> expr T_mod expr 
-- On T_rparen reduce production expr -> expr T_mod expr 
-- On T_rbrack reduce production expr -> expr T_mod expr 
-- On T_plus reduce production expr -> expr T_mod expr 
-- On T_or reduce production expr -> expr T_mod expr 
-- On T_neq reduce production expr -> expr T_mod expr 
-- On T_mul reduce production expr -> expr T_mod expr 
-- On T_morequ reduce production expr -> expr T_mod expr 
-- On T_more reduce production expr -> expr T_mod expr 
-- On T_mod reduce production expr -> expr T_mod expr 
-- On T_minus reduce production expr -> expr T_mod expr 
-- On T_lessequ reduce production expr -> expr T_mod expr 
-- On T_less reduce production expr -> expr T_mod expr 
-- On T_eq reduce production expr -> expr T_mod expr 
-- On T_div reduce production expr -> expr T_mod expr 
-- On T_com reduce production expr -> expr T_mod expr 
-- On T_and reduce production expr -> expr T_mod expr 

State 61:
expr -> expr T_div . expr [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
-- On T_string shift to state 39
-- On T_plus shift to state 40
-- On T_minus shift to state 42
-- On T_lparen shift to state 46
-- On T_id shift to state 44
-- On T_const_char_ shift to state 47
-- On T_const shift to state 48
-- On unary_op shift to state 49
-- On l_value shift to state 50
-- On func_call shift to state 51
-- On expr shift to state 62

State 62:
expr -> expr . T_plus expr [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
expr -> expr . T_minus expr [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
expr -> expr . T_mul expr [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
expr -> expr . T_div expr [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
expr -> expr T_div expr . [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
expr -> expr . T_mod expr [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
-- On T_mod shift to state 59
-- On T_semicol reduce production expr -> expr T_div expr 
-- On T_rparen reduce production expr -> expr T_div expr 
-- On T_rbrack reduce production expr -> expr T_div expr 
-- On T_plus reduce production expr -> expr T_div expr 
-- On T_or reduce production expr -> expr T_div expr 
-- On T_neq reduce production expr -> expr T_div expr 
-- On T_mul reduce production expr -> expr T_div expr 
-- On T_morequ reduce production expr -> expr T_div expr 
-- On T_more reduce production expr -> expr T_div expr 
-- On T_minus reduce production expr -> expr T_div expr 
-- On T_lessequ reduce production expr -> expr T_div expr 
-- On T_less reduce production expr -> expr T_div expr 
-- On T_eq reduce production expr -> expr T_div expr 
-- On T_div reduce production expr -> expr T_div expr 
-- On T_com reduce production expr -> expr T_div expr 
-- On T_and reduce production expr -> expr T_div expr 

State 63:
expr -> expr T_minus . expr [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
-- On T_string shift to state 39
-- On T_plus shift to state 40
-- On T_minus shift to state 42
-- On T_lparen shift to state 46
-- On T_id shift to state 44
-- On T_const_char_ shift to state 47
-- On T_const shift to state 48
-- On unary_op shift to state 49
-- On l_value shift to state 50
-- On func_call shift to state 51
-- On expr shift to state 64

State 64:
expr -> expr . T_plus expr [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
expr -> expr . T_minus expr [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
expr -> expr T_minus expr . [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
expr -> expr . T_mul expr [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
expr -> expr . T_div expr [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
expr -> expr . T_mod expr [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
-- On T_mul shift to state 57
-- On T_mod shift to state 59
-- On T_div shift to state 61
-- On T_semicol reduce production expr -> expr T_minus expr 
-- On T_rparen reduce production expr -> expr T_minus expr 
-- On T_rbrack reduce production expr -> expr T_minus expr 
-- On T_plus reduce production expr -> expr T_minus expr 
-- On T_or reduce production expr -> expr T_minus expr 
-- On T_neq reduce production expr -> expr T_minus expr 
-- On T_morequ reduce production expr -> expr T_minus expr 
-- On T_more reduce production expr -> expr T_minus expr 
-- On T_minus reduce production expr -> expr T_minus expr 
-- On T_lessequ reduce production expr -> expr T_minus expr 
-- On T_less reduce production expr -> expr T_minus expr 
-- On T_eq reduce production expr -> expr T_minus expr 
-- On T_com reduce production expr -> expr T_minus expr 
-- On T_and reduce production expr -> expr T_minus expr 

State 65:
func_call -> T_id T_lparen option(expr_list) . T_rparen [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
-- On T_rparen shift to state 66

State 66:
func_call -> T_id T_lparen option(expr_list) T_rparen . [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_and ]
-- On T_semicol reduce production func_call -> T_id T_lparen option(expr_list) T_rparen 
-- On T_rparen reduce production func_call -> T_id T_lparen option(expr_list) T_rparen 
-- On T_rbrack reduce production func_call -> T_id T_lparen option(expr_list) T_rparen 
-- On T_plus reduce production func_call -> T_id T_lparen option(expr_list) T_rparen 
-- On T_or reduce production func_call -> T_id T_lparen option(expr_list) T_rparen 
-- On T_neq reduce production func_call -> T_id T_lparen option(expr_list) T_rparen 
-- On T_mul reduce production func_call -> T_id T_lparen option(expr_list) T_rparen 
-- On T_morequ reduce production func_call -> T_id T_lparen option(expr_list) T_rparen 
-- On T_more reduce production func_call -> T_id T_lparen option(expr_list) T_rparen 
-- On T_mod reduce production func_call -> T_id T_lparen option(expr_list) T_rparen 
-- On T_minus reduce production func_call -> T_id T_lparen option(expr_list) T_rparen 
-- On T_lessequ reduce production func_call -> T_id T_lparen option(expr_list) T_rparen 
-- On T_less reduce production func_call -> T_id T_lparen option(expr_list) T_rparen 
-- On T_eq reduce production func_call -> T_id T_lparen option(expr_list) T_rparen 
-- On T_div reduce production func_call -> T_id T_lparen option(expr_list) T_rparen 
-- On T_com reduce production func_call -> T_id T_lparen option(expr_list) T_rparen 
-- On T_and reduce production func_call -> T_id T_lparen option(expr_list) T_rparen 

State 67:
expr_list -> expr_list . T_com expr [ T_rparen T_com ]
option(expr_list) -> expr_list . [ T_rparen ]
-- On T_com shift to state 68
-- On T_rparen reduce production option(expr_list) -> expr_list 

State 68:
expr_list -> expr_list T_com . expr [ T_rparen T_com ]
-- On T_string shift to state 39
-- On T_plus shift to state 40
-- On T_minus shift to state 42
-- On T_lparen shift to state 46
-- On T_id shift to state 44
-- On T_const_char_ shift to state 47
-- On T_const shift to state 48
-- On unary_op shift to state 49
-- On l_value shift to state 50
-- On func_call shift to state 51
-- On expr shift to state 69

State 69:
expr -> expr . T_plus expr [ T_rparen T_plus T_mul T_mod T_minus T_div T_com ]
expr -> expr . T_minus expr [ T_rparen T_plus T_mul T_mod T_minus T_div T_com ]
expr -> expr . T_mul expr [ T_rparen T_plus T_mul T_mod T_minus T_div T_com ]
expr -> expr . T_div expr [ T_rparen T_plus T_mul T_mod T_minus T_div T_com ]
expr -> expr . T_mod expr [ T_rparen T_plus T_mul T_mod T_minus T_div T_com ]
expr_list -> expr_list T_com expr . [ T_rparen T_com ]
-- On T_plus shift to state 55
-- On T_mul shift to state 57
-- On T_mod shift to state 59
-- On T_minus shift to state 63
-- On T_div shift to state 61
-- On T_rparen reduce production expr_list -> expr_list T_com expr 
-- On T_com reduce production expr_list -> expr_list T_com expr 

State 70:
expr -> expr . T_plus expr [ T_rparen T_plus T_mul T_mod T_minus T_div T_com ]
expr -> expr . T_minus expr [ T_rparen T_plus T_mul T_mod T_minus T_div T_com ]
expr -> expr . T_mul expr [ T_rparen T_plus T_mul T_mod T_minus T_div T_com ]
expr -> expr . T_div expr [ T_rparen T_plus T_mul T_mod T_minus T_div T_com ]
expr -> expr . T_mod expr [ T_rparen T_plus T_mul T_mod T_minus T_div T_com ]
expr_list -> expr . [ T_rparen T_com ]
-- On T_plus shift to state 55
-- On T_mul shift to state 57
-- On T_mod shift to state 59
-- On T_minus shift to state 63
-- On T_div shift to state 61
-- On T_rparen reduce production expr_list -> expr 
-- On T_com reduce production expr_list -> expr 

State 71:
l_value -> T_id T_lbrack . expr T_rbrack [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_assign T_and ]
-- On T_string shift to state 39
-- On T_plus shift to state 40
-- On T_minus shift to state 42
-- On T_lparen shift to state 46
-- On T_id shift to state 44
-- On T_const_char_ shift to state 47
-- On T_const shift to state 48
-- On unary_op shift to state 49
-- On l_value shift to state 50
-- On func_call shift to state 51
-- On expr shift to state 72

State 72:
expr -> expr . T_plus expr [ T_rbrack T_plus T_mul T_mod T_minus T_div ]
expr -> expr . T_minus expr [ T_rbrack T_plus T_mul T_mod T_minus T_div ]
expr -> expr . T_mul expr [ T_rbrack T_plus T_mul T_mod T_minus T_div ]
expr -> expr . T_div expr [ T_rbrack T_plus T_mul T_mod T_minus T_div ]
expr -> expr . T_mod expr [ T_rbrack T_plus T_mul T_mod T_minus T_div ]
l_value -> T_id T_lbrack expr . T_rbrack [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_assign T_and ]
-- On T_rbrack shift to state 73
-- On T_plus shift to state 55
-- On T_mul shift to state 57
-- On T_mod shift to state 59
-- On T_minus shift to state 63
-- On T_div shift to state 61

State 73:
l_value -> T_id T_lbrack expr T_rbrack . [ T_semicol T_rparen T_rbrack T_plus T_or T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div T_com T_assign T_and ]
-- On T_semicol reduce production l_value -> T_id T_lbrack expr T_rbrack 
-- On T_rparen reduce production l_value -> T_id T_lbrack expr T_rbrack 
-- On T_rbrack reduce production l_value -> T_id T_lbrack expr T_rbrack 
-- On T_plus reduce production l_value -> T_id T_lbrack expr T_rbrack 
-- On T_or reduce production l_value -> T_id T_lbrack expr T_rbrack 
-- On T_neq reduce production l_value -> T_id T_lbrack expr T_rbrack 
-- On T_mul reduce production l_value -> T_id T_lbrack expr T_rbrack 
-- On T_morequ reduce production l_value -> T_id T_lbrack expr T_rbrack 
-- On T_more reduce production l_value -> T_id T_lbrack expr T_rbrack 
-- On T_mod reduce production l_value -> T_id T_lbrack expr T_rbrack 
-- On T_minus reduce production l_value -> T_id T_lbrack expr T_rbrack 
-- On T_lessequ reduce production l_value -> T_id T_lbrack expr T_rbrack 
-- On T_less reduce production l_value -> T_id T_lbrack expr T_rbrack 
-- On T_eq reduce production l_value -> T_id T_lbrack expr T_rbrack 
-- On T_div reduce production l_value -> T_id T_lbrack expr T_rbrack 
-- On T_com reduce production l_value -> T_id T_lbrack expr T_rbrack 
-- On T_assign reduce production l_value -> T_id T_lbrack expr T_rbrack 
-- On T_and reduce production l_value -> T_id T_lbrack expr T_rbrack 

State 74:
cond -> T_false . [ T_rparen T_or T_and ]
-- On T_rparen reduce production cond -> T_false 
-- On T_or reduce production cond -> T_false 
-- On T_and reduce production cond -> T_false 

State 75:
cond -> unary_logic_op . cond [ T_rparen T_or T_and ]
-- On T_true shift to state 38
-- On T_string shift to state 39
-- On T_plus shift to state 40
-- On T_neg shift to state 41
-- On T_minus shift to state 42
-- On T_lparen shift to state 43
-- On T_id shift to state 44
-- On T_false shift to state 74
-- On T_const_char_ shift to state 47
-- On T_const shift to state 48
-- On unary_op shift to state 49
-- On unary_logic_op shift to state 75
-- On l_value shift to state 50
-- On func_call shift to state 51
-- On expr shift to state 76
-- On cond shift to state 85

State 76:
cond -> expr . compare_op expr [ T_rparen T_or T_and ]
expr -> expr . T_plus expr [ T_plus T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div ]
expr -> expr . T_minus expr [ T_plus T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div ]
expr -> expr . T_mul expr [ T_plus T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div ]
expr -> expr . T_div expr [ T_plus T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div ]
expr -> expr . T_mod expr [ T_plus T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div ]
-- On T_plus shift to state 55
-- On T_neq shift to state 77
-- On T_mul shift to state 57
-- On T_morequ shift to state 78
-- On T_more shift to state 79
-- On T_mod shift to state 59
-- On T_minus shift to state 63
-- On T_lessequ shift to state 80
-- On T_less shift to state 81
-- On T_eq shift to state 82
-- On T_div shift to state 61
-- On compare_op shift to state 83

State 77:
compare_op -> T_neq . [ T_string T_plus T_minus T_lparen T_id T_const_char_ T_const ]
-- On T_string reduce production compare_op -> T_neq 
-- On T_plus reduce production compare_op -> T_neq 
-- On T_minus reduce production compare_op -> T_neq 
-- On T_lparen reduce production compare_op -> T_neq 
-- On T_id reduce production compare_op -> T_neq 
-- On T_const_char_ reduce production compare_op -> T_neq 
-- On T_const reduce production compare_op -> T_neq 

State 78:
compare_op -> T_morequ . [ T_string T_plus T_minus T_lparen T_id T_const_char_ T_const ]
-- On T_string reduce production compare_op -> T_morequ 
-- On T_plus reduce production compare_op -> T_morequ 
-- On T_minus reduce production compare_op -> T_morequ 
-- On T_lparen reduce production compare_op -> T_morequ 
-- On T_id reduce production compare_op -> T_morequ 
-- On T_const_char_ reduce production compare_op -> T_morequ 
-- On T_const reduce production compare_op -> T_morequ 

State 79:
compare_op -> T_more . [ T_string T_plus T_minus T_lparen T_id T_const_char_ T_const ]
-- On T_string reduce production compare_op -> T_more 
-- On T_plus reduce production compare_op -> T_more 
-- On T_minus reduce production compare_op -> T_more 
-- On T_lparen reduce production compare_op -> T_more 
-- On T_id reduce production compare_op -> T_more 
-- On T_const_char_ reduce production compare_op -> T_more 
-- On T_const reduce production compare_op -> T_more 

State 80:
compare_op -> T_lessequ . [ T_string T_plus T_minus T_lparen T_id T_const_char_ T_const ]
-- On T_string reduce production compare_op -> T_lessequ 
-- On T_plus reduce production compare_op -> T_lessequ 
-- On T_minus reduce production compare_op -> T_lessequ 
-- On T_lparen reduce production compare_op -> T_lessequ 
-- On T_id reduce production compare_op -> T_lessequ 
-- On T_const_char_ reduce production compare_op -> T_lessequ 
-- On T_const reduce production compare_op -> T_lessequ 

State 81:
compare_op -> T_less . [ T_string T_plus T_minus T_lparen T_id T_const_char_ T_const ]
-- On T_string reduce production compare_op -> T_less 
-- On T_plus reduce production compare_op -> T_less 
-- On T_minus reduce production compare_op -> T_less 
-- On T_lparen reduce production compare_op -> T_less 
-- On T_id reduce production compare_op -> T_less 
-- On T_const_char_ reduce production compare_op -> T_less 
-- On T_const reduce production compare_op -> T_less 

State 82:
compare_op -> T_eq . [ T_string T_plus T_minus T_lparen T_id T_const_char_ T_const ]
-- On T_string reduce production compare_op -> T_eq 
-- On T_plus reduce production compare_op -> T_eq 
-- On T_minus reduce production compare_op -> T_eq 
-- On T_lparen reduce production compare_op -> T_eq 
-- On T_id reduce production compare_op -> T_eq 
-- On T_const_char_ reduce production compare_op -> T_eq 
-- On T_const reduce production compare_op -> T_eq 

State 83:
cond -> expr compare_op . expr [ T_rparen T_or T_and ]
-- On T_string shift to state 39
-- On T_plus shift to state 40
-- On T_minus shift to state 42
-- On T_lparen shift to state 46
-- On T_id shift to state 44
-- On T_const_char_ shift to state 47
-- On T_const shift to state 48
-- On unary_op shift to state 49
-- On l_value shift to state 50
-- On func_call shift to state 51
-- On expr shift to state 84

State 84:
cond -> expr compare_op expr . [ T_rparen T_or T_and ]
expr -> expr . T_plus expr [ T_rparen T_plus T_or T_mul T_mod T_minus T_div T_and ]
expr -> expr . T_minus expr [ T_rparen T_plus T_or T_mul T_mod T_minus T_div T_and ]
expr -> expr . T_mul expr [ T_rparen T_plus T_or T_mul T_mod T_minus T_div T_and ]
expr -> expr . T_div expr [ T_rparen T_plus T_or T_mul T_mod T_minus T_div T_and ]
expr -> expr . T_mod expr [ T_rparen T_plus T_or T_mul T_mod T_minus T_div T_and ]
-- On T_plus shift to state 55
-- On T_mul shift to state 57
-- On T_mod shift to state 59
-- On T_minus shift to state 63
-- On T_div shift to state 61
-- On T_rparen reduce production cond -> expr compare_op expr 
-- On T_or reduce production cond -> expr compare_op expr 
-- On T_and reduce production cond -> expr compare_op expr 

State 85:
cond -> unary_logic_op cond . [ T_rparen T_or T_and ]
cond -> cond . T_and cond [ T_rparen T_or T_and ]
cond -> cond . T_or cond [ T_rparen T_or T_and ]
-- On T_rparen reduce production cond -> unary_logic_op cond 
-- On T_or reduce production cond -> unary_logic_op cond 
-- On T_and reduce production cond -> unary_logic_op cond 

State 86:
cond -> expr . compare_op expr [ T_rparen T_or T_and ]
expr -> T_lparen expr . T_rparen [ T_rparen T_plus T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div ]
expr -> expr . T_plus expr [ T_rparen T_plus T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div ]
expr -> expr . T_minus expr [ T_rparen T_plus T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div ]
expr -> expr . T_mul expr [ T_rparen T_plus T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div ]
expr -> expr . T_div expr [ T_rparen T_plus T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div ]
expr -> expr . T_mod expr [ T_rparen T_plus T_neq T_mul T_morequ T_more T_mod T_minus T_lessequ T_less T_eq T_div ]
-- On T_rparen shift to state 54
-- On T_plus shift to state 55
-- On T_neq shift to state 77
-- On T_mul shift to state 57
-- On T_morequ shift to state 78
-- On T_more shift to state 79
-- On T_mod shift to state 59
-- On T_minus shift to state 63
-- On T_lessequ shift to state 80
-- On T_less shift to state 81
-- On T_eq shift to state 82
-- On T_div shift to state 61
-- On compare_op shift to state 83

State 87:
cond -> T_lparen cond . T_rparen [ T_rparen T_or T_and ]
cond -> cond . T_and cond [ T_rparen T_or T_and ]
cond -> cond . T_or cond [ T_rparen T_or T_and ]
-- On T_rparen shift to state 88
-- On T_or shift to state 89
-- On T_and shift to state 91

State 88:
cond -> T_lparen cond T_rparen . [ T_rparen T_or T_and ]
-- On T_rparen reduce production cond -> T_lparen cond T_rparen 
-- On T_or reduce production cond -> T_lparen cond T_rparen 
-- On T_and reduce production cond -> T_lparen cond T_rparen 

State 89:
cond -> cond T_or . cond [ T_rparen T_or T_and ]
-- On T_true shift to state 38
-- On T_string shift to state 39
-- On T_plus shift to state 40
-- On T_neg shift to state 41
-- On T_minus shift to state 42
-- On T_lparen shift to state 43
-- On T_id shift to state 44
-- On T_false shift to state 74
-- On T_const_char_ shift to state 47
-- On T_const shift to state 48
-- On unary_op shift to state 49
-- On unary_logic_op shift to state 75
-- On l_value shift to state 50
-- On func_call shift to state 51
-- On expr shift to state 76
-- On cond shift to state 90

State 90:
cond -> cond . T_and cond [ T_rparen T_or T_and ]
cond -> cond . T_or cond [ T_rparen T_or T_and ]
cond -> cond T_or cond . [ T_rparen T_or T_and ]
-- On T_and shift to state 91
-- On T_rparen reduce production cond -> cond T_or cond 
-- On T_or reduce production cond -> cond T_or cond 

State 91:
cond -> cond T_and . cond [ T_rparen T_or T_and ]
-- On T_true shift to state 38
-- On T_string shift to state 39
-- On T_plus shift to state 40
-- On T_neg shift to state 41
-- On T_minus shift to state 42
-- On T_lparen shift to state 43
-- On T_id shift to state 44
-- On T_false shift to state 74
-- On T_const_char_ shift to state 47
-- On T_const shift to state 48
-- On unary_op shift to state 49
-- On unary_logic_op shift to state 75
-- On l_value shift to state 50
-- On func_call shift to state 51
-- On expr shift to state 76
-- On cond shift to state 92

State 92:
cond -> cond . T_and cond [ T_rparen T_or T_and ]
cond -> cond T_and cond . [ T_rparen T_or T_and ]
cond -> cond . T_or cond [ T_rparen T_or T_and ]
-- On T_rparen reduce production cond -> cond T_and cond 
-- On T_or reduce production cond -> cond T_and cond 
-- On T_and reduce production cond -> cond T_and cond 

State 93:
cond -> cond . T_and cond [ T_rparen T_or T_and ]
cond -> cond . T_or cond [ T_rparen T_or T_and ]
stmt -> T_while T_lparen cond . T_rparen stmt [ T_while T_string T_semicol T_return T_rbrace T_lbrace T_if T_id T_else ]
-- On T_rparen shift to state 94
-- On T_or shift to state 89
-- On T_and shift to state 91

State 94:
stmt -> T_while T_lparen cond T_rparen . stmt [ T_while T_string T_semicol T_return T_rbrace T_lbrace T_if T_id T_else ]
-- On T_while shift to state 36
-- On T_string shift to state 39
-- On T_semicol shift to state 95
-- On T_return shift to state 96
-- On T_lbrace shift to state 35
-- On T_if shift to state 100
-- On T_id shift to state 44
-- On stmt shift to state 114
-- On l_value shift to state 107
-- On func_call shift to state 111
-- On compound_stmt shift to state 113

State 95:
stmt -> T_semicol . [ T_while T_string T_semicol T_return T_rbrace T_lbrace T_if T_id T_else ]
-- On T_while reduce production stmt -> T_semicol 
-- On T_string reduce production stmt -> T_semicol 
-- On T_semicol reduce production stmt -> T_semicol 
-- On T_return reduce production stmt -> T_semicol 
-- On T_rbrace reduce production stmt -> T_semicol 
-- On T_lbrace reduce production stmt -> T_semicol 
-- On T_if reduce production stmt -> T_semicol 
-- On T_id reduce production stmt -> T_semicol 
-- On T_else reduce production stmt -> T_semicol 

State 96:
stmt -> T_return . option(expr) T_semicol [ T_while T_string T_semicol T_return T_rbrace T_lbrace T_if T_id T_else ]
-- On T_string shift to state 39
-- On T_plus shift to state 40
-- On T_minus shift to state 42
-- On T_lparen shift to state 46
-- On T_id shift to state 44
-- On T_const_char_ shift to state 47
-- On T_const shift to state 48
-- On unary_op shift to state 49
-- On option(expr) shift to state 97
-- On l_value shift to state 50
-- On func_call shift to state 51
-- On expr shift to state 99
-- On T_semicol reduce production option(expr) -> 

State 97:
stmt -> T_return option(expr) . T_semicol [ T_while T_string T_semicol T_return T_rbrace T_lbrace T_if T_id T_else ]
-- On T_semicol shift to state 98

State 98:
stmt -> T_return option(expr) T_semicol . [ T_while T_string T_semicol T_return T_rbrace T_lbrace T_if T_id T_else ]
-- On T_while reduce production stmt -> T_return option(expr) T_semicol 
-- On T_string reduce production stmt -> T_return option(expr) T_semicol 
-- On T_semicol reduce production stmt -> T_return option(expr) T_semicol 
-- On T_return reduce production stmt -> T_return option(expr) T_semicol 
-- On T_rbrace reduce production stmt -> T_return option(expr) T_semicol 
-- On T_lbrace reduce production stmt -> T_return option(expr) T_semicol 
-- On T_if reduce production stmt -> T_return option(expr) T_semicol 
-- On T_id reduce production stmt -> T_return option(expr) T_semicol 
-- On T_else reduce production stmt -> T_return option(expr) T_semicol 

State 99:
expr -> expr . T_plus expr [ T_semicol T_plus T_mul T_mod T_minus T_div ]
expr -> expr . T_minus expr [ T_semicol T_plus T_mul T_mod T_minus T_div ]
expr -> expr . T_mul expr [ T_semicol T_plus T_mul T_mod T_minus T_div ]
expr -> expr . T_div expr [ T_semicol T_plus T_mul T_mod T_minus T_div ]
expr -> expr . T_mod expr [ T_semicol T_plus T_mul T_mod T_minus T_div ]
option(expr) -> expr . [ T_semicol ]
-- On T_plus shift to state 55
-- On T_mul shift to state 57
-- On T_mod shift to state 59
-- On T_minus shift to state 63
-- On T_div shift to state 61
-- On T_semicol reduce production option(expr) -> expr 

State 100:
stmt -> T_if . T_lparen cond T_rparen stmt T_else stmt [ T_while T_string T_semicol T_return T_rbrace T_lbrace T_if T_id T_else ]
stmt -> T_if . T_lparen cond T_rparen stmt [ T_while T_string T_semicol T_return T_rbrace T_lbrace T_if T_id T_else ]
-- On T_lparen shift to state 101

State 101:
stmt -> T_if T_lparen . cond T_rparen stmt T_else stmt [ T_while T_string T_semicol T_return T_rbrace T_lbrace T_if T_id T_else ]
stmt -> T_if T_lparen . cond T_rparen stmt [ T_while T_string T_semicol T_return T_rbrace T_lbrace T_if T_id T_else ]
-- On T_true shift to state 38
-- On T_string shift to state 39
-- On T_plus shift to state 40
-- On T_neg shift to state 41
-- On T_minus shift to state 42
-- On T_lparen shift to state 43
-- On T_id shift to state 44
-- On T_false shift to state 74
-- On T_const_char_ shift to state 47
-- On T_const shift to state 48
-- On unary_op shift to state 49
-- On unary_logic_op shift to state 75
-- On l_value shift to state 50
-- On func_call shift to state 51
-- On expr shift to state 76
-- On cond shift to state 102

State 102:
cond -> cond . T_and cond [ T_rparen T_or T_and ]
cond -> cond . T_or cond [ T_rparen T_or T_and ]
stmt -> T_if T_lparen cond . T_rparen stmt T_else stmt [ T_while T_string T_semicol T_return T_rbrace T_lbrace T_if T_id T_else ]
stmt -> T_if T_lparen cond . T_rparen stmt [ T_while T_string T_semicol T_return T_rbrace T_lbrace T_if T_id T_else ]
-- On T_rparen shift to state 103
-- On T_or shift to state 89
-- On T_and shift to state 91

State 103:
stmt -> T_if T_lparen cond T_rparen . stmt T_else stmt [ T_while T_string T_semicol T_return T_rbrace T_lbrace T_if T_id T_else ]
stmt -> T_if T_lparen cond T_rparen . stmt [ T_while T_string T_semicol T_return T_rbrace T_lbrace T_if T_id T_else ]
-- On T_while shift to state 36
-- On T_string shift to state 39
-- On T_semicol shift to state 95
-- On T_return shift to state 96
-- On T_lbrace shift to state 35
-- On T_if shift to state 100
-- On T_id shift to state 44
-- On stmt shift to state 104
-- On l_value shift to state 107
-- On func_call shift to state 111
-- On compound_stmt shift to state 113

State 104:
stmt -> T_if T_lparen cond T_rparen stmt . T_else stmt [ T_while T_string T_semicol T_return T_rbrace T_lbrace T_if T_id T_else ]
stmt -> T_if T_lparen cond T_rparen stmt . [ T_while T_string T_semicol T_return T_rbrace T_lbrace T_if T_id T_else ]
-- On T_else shift to state 105
-- On T_while reduce production stmt -> T_if T_lparen cond T_rparen stmt 
-- On T_string reduce production stmt -> T_if T_lparen cond T_rparen stmt 
-- On T_semicol reduce production stmt -> T_if T_lparen cond T_rparen stmt 
-- On T_return reduce production stmt -> T_if T_lparen cond T_rparen stmt 
-- On T_rbrace reduce production stmt -> T_if T_lparen cond T_rparen stmt 
-- On T_lbrace reduce production stmt -> T_if T_lparen cond T_rparen stmt 
-- On T_if reduce production stmt -> T_if T_lparen cond T_rparen stmt 
-- On T_id reduce production stmt -> T_if T_lparen cond T_rparen stmt 

State 105:
stmt -> T_if T_lparen cond T_rparen stmt T_else . stmt [ T_while T_string T_semicol T_return T_rbrace T_lbrace T_if T_id T_else ]
-- On T_while shift to state 36
-- On T_string shift to state 39
-- On T_semicol shift to state 95
-- On T_return shift to state 96
-- On T_lbrace shift to state 35
-- On T_if shift to state 100
-- On T_id shift to state 44
-- On stmt shift to state 106
-- On l_value shift to state 107
-- On func_call shift to state 111
-- On compound_stmt shift to state 113

State 106:
stmt -> T_if T_lparen cond T_rparen stmt T_else stmt . [ T_while T_string T_semicol T_return T_rbrace T_lbrace T_if T_id T_else ]
-- On T_while reduce production stmt -> T_if T_lparen cond T_rparen stmt T_else stmt 
-- On T_string reduce production stmt -> T_if T_lparen cond T_rparen stmt T_else stmt 
-- On T_semicol reduce production stmt -> T_if T_lparen cond T_rparen stmt T_else stmt 
-- On T_return reduce production stmt -> T_if T_lparen cond T_rparen stmt T_else stmt 
-- On T_rbrace reduce production stmt -> T_if T_lparen cond T_rparen stmt T_else stmt 
-- On T_lbrace reduce production stmt -> T_if T_lparen cond T_rparen stmt T_else stmt 
-- On T_if reduce production stmt -> T_if T_lparen cond T_rparen stmt T_else stmt 
-- On T_id reduce production stmt -> T_if T_lparen cond T_rparen stmt T_else stmt 
-- On T_else reduce production stmt -> T_if T_lparen cond T_rparen stmt T_else stmt 

State 107:
stmt -> l_value . T_assign expr T_semicol [ T_while T_string T_semicol T_return T_rbrace T_lbrace T_if T_id T_else ]
-- On T_assign shift to state 108

State 108:
stmt -> l_value T_assign . expr T_semicol [ T_while T_string T_semicol T_return T_rbrace T_lbrace T_if T_id T_else ]
-- On T_string shift to state 39
-- On T_plus shift to state 40
-- On T_minus shift to state 42
-- On T_lparen shift to state 46
-- On T_id shift to state 44
-- On T_const_char_ shift to state 47
-- On T_const shift to state 48
-- On unary_op shift to state 49
-- On l_value shift to state 50
-- On func_call shift to state 51
-- On expr shift to state 109

State 109:
expr -> expr . T_plus expr [ T_semicol T_plus T_mul T_mod T_minus T_div ]
expr -> expr . T_minus expr [ T_semicol T_plus T_mul T_mod T_minus T_div ]
expr -> expr . T_mul expr [ T_semicol T_plus T_mul T_mod T_minus T_div ]
expr -> expr . T_div expr [ T_semicol T_plus T_mul T_mod T_minus T_div ]
expr -> expr . T_mod expr [ T_semicol T_plus T_mul T_mod T_minus T_div ]
stmt -> l_value T_assign expr . T_semicol [ T_while T_string T_semicol T_return T_rbrace T_lbrace T_if T_id T_else ]
-- On T_semicol shift to state 110
-- On T_plus shift to state 55
-- On T_mul shift to state 57
-- On T_mod shift to state 59
-- On T_minus shift to state 63
-- On T_div shift to state 61

State 110:
stmt -> l_value T_assign expr T_semicol . [ T_while T_string T_semicol T_return T_rbrace T_lbrace T_if T_id T_else ]
-- On T_while reduce production stmt -> l_value T_assign expr T_semicol 
-- On T_string reduce production stmt -> l_value T_assign expr T_semicol 
-- On T_semicol reduce production stmt -> l_value T_assign expr T_semicol 
-- On T_return reduce production stmt -> l_value T_assign expr T_semicol 
-- On T_rbrace reduce production stmt -> l_value T_assign expr T_semicol 
-- On T_lbrace reduce production stmt -> l_value T_assign expr T_semicol 
-- On T_if reduce production stmt -> l_value T_assign expr T_semicol 
-- On T_id reduce production stmt -> l_value T_assign expr T_semicol 
-- On T_else reduce production stmt -> l_value T_assign expr T_semicol 

State 111:
stmt -> func_call . T_semicol [ T_while T_string T_semicol T_return T_rbrace T_lbrace T_if T_id T_else ]
-- On T_semicol shift to state 112

State 112:
stmt -> func_call T_semicol . [ T_while T_string T_semicol T_return T_rbrace T_lbrace T_if T_id T_else ]
-- On T_while reduce production stmt -> func_call T_semicol 
-- On T_string reduce production stmt -> func_call T_semicol 
-- On T_semicol reduce production stmt -> func_call T_semicol 
-- On T_return reduce production stmt -> func_call T_semicol 
-- On T_rbrace reduce production stmt -> func_call T_semicol 
-- On T_lbrace reduce production stmt -> func_call T_semicol 
-- On T_if reduce production stmt -> func_call T_semicol 
-- On T_id reduce production stmt -> func_call T_semicol 
-- On T_else reduce production stmt -> func_call T_semicol 

State 113:
stmt -> compound_stmt . [ T_while T_string T_semicol T_return T_rbrace T_lbrace T_if T_id T_else ]
-- On T_while reduce production stmt -> compound_stmt 
-- On T_string reduce production stmt -> compound_stmt 
-- On T_semicol reduce production stmt -> compound_stmt 
-- On T_return reduce production stmt -> compound_stmt 
-- On T_rbrace reduce production stmt -> compound_stmt 
-- On T_lbrace reduce production stmt -> compound_stmt 
-- On T_if reduce production stmt -> compound_stmt 
-- On T_id reduce production stmt -> compound_stmt 
-- On T_else reduce production stmt -> compound_stmt 

State 114:
stmt -> T_while T_lparen cond T_rparen stmt . [ T_while T_string T_semicol T_return T_rbrace T_lbrace T_if T_id T_else ]
-- On T_while reduce production stmt -> T_while T_lparen cond T_rparen stmt 
-- On T_string reduce production stmt -> T_while T_lparen cond T_rparen stmt 
-- On T_semicol reduce production stmt -> T_while T_lparen cond T_rparen stmt 
-- On T_return reduce production stmt -> T_while T_lparen cond T_rparen stmt 
-- On T_rbrace reduce production stmt -> T_while T_lparen cond T_rparen stmt 
-- On T_lbrace reduce production stmt -> T_while T_lparen cond T_rparen stmt 
-- On T_if reduce production stmt -> T_while T_lparen cond T_rparen stmt 
-- On T_id reduce production stmt -> T_while T_lparen cond T_rparen stmt 
-- On T_else reduce production stmt -> T_while T_lparen cond T_rparen stmt 

State 115:
list(stmt) -> stmt . list(stmt) [ T_rbrace ]
-- On T_while shift to state 36
-- On T_string shift to state 39
-- On T_semicol shift to state 95
-- On T_return shift to state 96
-- On T_lbrace shift to state 35
-- On T_if shift to state 100
-- On T_id shift to state 44
-- On stmt shift to state 115
-- On list(stmt) shift to state 116
-- On l_value shift to state 107
-- On func_call shift to state 111
-- On compound_stmt shift to state 113
-- On T_rbrace reduce production list(stmt) -> 

State 116:
list(stmt) -> stmt list(stmt) . [ T_rbrace ]
-- On T_rbrace reduce production list(stmt) -> stmt list(stmt) 

State 117:
compound_stmt -> T_lbrace list(stmt) . T_rbrace [ T_while T_string T_semicol T_return T_rbrace T_lbrace T_if T_id T_eof T_else ]
-- On T_rbrace shift to state 118

State 118:
compound_stmt -> T_lbrace list(stmt) T_rbrace . [ T_while T_string T_semicol T_return T_rbrace T_lbrace T_if T_id T_eof T_else ]
-- On T_while reduce production compound_stmt -> T_lbrace list(stmt) T_rbrace 
-- On T_string reduce production compound_stmt -> T_lbrace list(stmt) T_rbrace 
-- On T_semicol reduce production compound_stmt -> T_lbrace list(stmt) T_rbrace 
-- On T_return reduce production compound_stmt -> T_lbrace list(stmt) T_rbrace 
-- On T_rbrace reduce production compound_stmt -> T_lbrace list(stmt) T_rbrace 
-- On T_lbrace reduce production compound_stmt -> T_lbrace list(stmt) T_rbrace 
-- On T_if reduce production compound_stmt -> T_lbrace list(stmt) T_rbrace 
-- On T_id reduce production compound_stmt -> T_lbrace list(stmt) T_rbrace 
-- On T_eof reduce production compound_stmt -> T_lbrace list(stmt) T_rbrace 
-- On T_else reduce production compound_stmt -> T_lbrace list(stmt) T_rbrace 

State 119:
func_def -> T_id T_lparen option(fpar_list) T_rparen T_col r_type_ list(local_def) compound_stmt . [ T_lbrace T_id T_eof ]
-- On T_lbrace reduce production func_def -> T_id T_lparen option(fpar_list) T_rparen T_col r_type_ list(local_def) compound_stmt 
-- On T_id reduce production func_def -> T_id T_lparen option(fpar_list) T_rparen T_col r_type_ list(local_def) compound_stmt 
-- On T_eof reduce production func_def -> T_id T_lparen option(fpar_list) T_rparen T_col r_type_ list(local_def) compound_stmt 

State 120:
r_type_ -> data_type_ . [ T_lbrace T_id ]
-- On T_lbrace reduce production r_type_ -> data_type_ 
-- On T_id reduce production r_type_ -> data_type_ 

State 121:
fpar_list -> fpar_list . T_com fpar_def [ T_rparen T_com ]
option(fpar_list) -> fpar_list . [ T_rparen ]
-- On T_com shift to state 122
-- On T_rparen reduce production option(fpar_list) -> fpar_list 

State 122:
fpar_list -> fpar_list T_com . fpar_def [ T_rparen T_com ]
-- On T_id shift to state 3
-- On fpar_def shift to state 123

State 123:
fpar_list -> fpar_list T_com fpar_def . [ T_rparen T_com ]
-- On T_rparen reduce production fpar_list -> fpar_list T_com fpar_def 
-- On T_com reduce production fpar_list -> fpar_list T_com fpar_def 

State 124:
fpar_list -> fpar_def . [ T_rparen T_com ]
-- On T_rparen reduce production fpar_list -> fpar_def 
-- On T_com reduce production fpar_list -> fpar_def 

State 125:
program' -> program . [ # ]
-- On # accept program

State 126:
program -> func_def . T_eof [ # ]
-- On T_eof shift to state 127

State 127:
program -> func_def T_eof . [ # ]
-- On # reduce production program -> func_def T_eof 

